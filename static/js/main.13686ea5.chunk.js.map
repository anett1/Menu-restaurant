{"version":3,"sources":["img/chickenburger.png","components/Counter.js","components/Button.js","components/HeaderMenuItems.js","components/Preloader.js","views/MenuView.js","components/Summary.js","views/SummaryView.js","components/Input.js","views/InvitationView.js","config/reducer.js","config/store.js","views/Root.js","index.js"],"names":["module","exports","Counter","props","summary","className","onClick","removeFromOrder","item","quantity","addToOrder","disabled","orderItem","menuItem","connect","state","tableNumber","path","children","checkNumberButton","handleTrueTableNumber","sendOrderButton","sendOrder","to","HeaderMenuItems","exact","src","img","alt","this","MenuView","orderStatus","length","map","reduce","ecc","Component","Preloader","MenuItems","React","lazy","fallback","Summary","orderNumber","data","totalPrices","clearOrder","fetch","method","headers","Accept","body","JSON","stringify","then","result","json","resp","pickup_number","setState","addPrices","items","style","paddingLeft","sort","a","b","id","key","name","price","priceMultiQuantity","dispatch","type","payload","SummaryView","handleTableNumber","e","target","value","placeholder","onChange","handleFalseTableNumber","InvitationView","statusTableNumber","orderStatusWithoutItem","filter","orderStatusItem","addToOrderStatus","itemInOrderStatus","undefined","parseFloat","toFixed","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","Root","basename","process","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13686ea5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chickenburger.701748e7.png\";","import React from \"react\";\r\nimport \"../styles/counter.scss\";\r\n\r\nconst Counter = (props) => {\r\n  return props.summary ? (\r\n    <div className=\"counter\">\r\n      <button\r\n        //disabled={props.orderItem ? false : true}\r\n        onClick={() => props.removeFromOrder(props.item)}\r\n      >\r\n        <h1>-</h1>\r\n      </button>\r\n      <span>{props.item.quantity || 0}</span>\r\n      <button onClick={() => props.addToOrder(props.item)}>\r\n        <h1>+</h1>\r\n      </button>\r\n    </div>\r\n  ) : (\r\n    <div className=\"counter\">\r\n      <button\r\n        disabled={props.orderItem ? false : true}\r\n        onClick={() => props.removeFromOrder(props.orderItem)}\r\n      >\r\n        <h1>-</h1>\r\n      </button>\r\n      <span>{(props.orderItem && props.orderItem.quantity) || 0}</span>\r\n      <button onClick={() => props.addToOrder(props.menuItem)}>\r\n        <h1>+</h1>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\nimport \"../styles/button.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Button = ({\r\n  path,\r\n  children,\r\n  checkNumberButton,\r\n  tableNumber,\r\n  handleTrueTableNumber,\r\n  sendOrderButton,\r\n  sendOrder,\r\n}) => {\r\n  return checkNumberButton && tableNumber === \"\" ? (\r\n    <a\r\n      className=\"button\"\r\n      onClick={() => {\r\n        handleTrueTableNumber();\r\n      }}\r\n    >\r\n      {children}\r\n    </a>\r\n  ) : sendOrderButton ? (\r\n    <a\r\n      className=\"button\"\r\n      onClick={() => {\r\n        sendOrder();\r\n      }}\r\n    >\r\n      {children}\r\n    </a>\r\n  ) : (\r\n    <Link className=\"button\" to={path}>\r\n      {children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tableNumber: state.tableNumber,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Button);\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/headerMenuItems.scss\";\r\nimport Button from \"./Button\";\r\nimport { connect } from \"react-redux\";\r\nimport img from \"../img/chickenburger.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HeaderMenuItems extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"HeaderMenuItemsWrapper\">\r\n        <div className=\"logo\">\r\n          <Link exact=\"true\" to=\"/\">\r\n            <img src={img} alt={img} />\r\n          </Link>\r\n        </div>\r\n        {this.props.MenuView ? (\r\n          <div className=\"HeaderMenuItemsButton\">\r\n            {this.props.orderStatus.length !== 0 ? (\r\n              <Button path={\"/summary\"}>\r\n                see your order{\" \"}\r\n                <span className=\"quantity\">\r\n                  <strong>\r\n                    {this.props.orderStatus\r\n                      .map((item) => item.quantity)\r\n                      .reduce((ecc, item) => ecc + item)}\r\n                  </strong>\r\n                </span>{\" \"}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        ) : (\r\n          <div className=\"HeaderMenuItemsButton\">\r\n            {this.props.orderStatus.length !== 0 ? (\r\n              <Button path={\"/menu\"}>\r\n                back to menu{\" \"}\r\n                <span className=\"quantity\">\r\n                  <strong>\r\n                    {this.props.orderStatus\r\n                      .map((item) => item.quantity)\r\n                      .reduce((ecc, item) => ecc + item)}\r\n                  </strong>\r\n                </span>\r\n              </Button>\r\n            ) : (\r\n              <Button path={\"/\"}>Start new order</Button>\r\n            )}\r\n\r\n            {this.props.orderStatus.length !== 0 ? (\r\n              <h4>Your table number: {this.props.tableNumber}</h4>\r\n            ) : null}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tableNumber: state.tableNumber,\r\n    orderStatus: state.orderStatus,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HeaderMenuItems);\r\n","import React from \"react\";\r\nimport \"../styles/preloader.scss\";\r\n\r\nconst Preloader = () => (\r\n  <div className=\"preloader\">\r\n    <div className=\"doc\"></div>\r\n    <div className=\"doc\"></div>\r\n    <div className=\"doc\"></div>\r\n  </div>\r\n);\r\n\r\nexport default Preloader;\r\n","import React, { Suspense } from \"react\";\r\nimport HeaderMenuItems from \"../components/HeaderMenuItems\";\r\nimport Preloader from \"../components/Preloader\";\r\n//import MenuItems from \"../components/MenuItems\";\r\nimport \"../styles/menuView.scss\";\r\n\r\nconst MenuItems = React.lazy(() => import(\"../components/MenuItems\"));\r\n\r\nfunction MenuView() {\r\n  return (\r\n    <>\r\n      <HeaderMenuItems MenuView />\r\n      <Suspense fallback={<Preloader />}>\r\n        <MenuItems />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MenuView;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Counter from \"./Counter\";\r\nimport Button from \"./Button\";\r\nimport \"../styles/summary.scss\";\r\n\r\nfunction sort(items) {\r\n  return items.sort((a, b) => a.id - b.id);\r\n}\r\n\r\nclass Summary extends React.Component {\r\n  state = {\r\n    orderNumber: \"\",\r\n  };\r\n  componentDidUpdate() {\r\n    this.props.addPrices(this.props.orderStatus);\r\n  }\r\n\r\n  sendOrder = () => {\r\n    const API = \"https://sheltered-spire-21470.herokuapp.com/api/order\";\r\n    let data = {\r\n      tableNumber: this.props.tableNumber,\r\n      orderStatus: this.props.orderStatus,\r\n      totalPrices: this.props.totalPrices,\r\n    };\r\n    //console.log(data);\r\n    this.props.clearOrder();\r\n    fetch(API, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }).then((result) => {\r\n      result.json().then((resp) => {\r\n        const orderNumber = resp.pickup_number;\r\n        this.setState({\r\n          orderNumber: orderNumber,\r\n        });\r\n\r\n        //console.log(orderNumber);\r\n        //console.warn(\"resp\", resp);\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapperSummary\">\r\n        {this.props.orderStatus.length === 0 ? (\r\n          <div className=\"orderedItem\">\r\n            <p\r\n              style={{\r\n                paddingLeft: 20,\r\n              }}\r\n            >\r\n              Your order number:{\" \"}\r\n              <span className=\"orderNumber\">{this.state.orderNumber}</span> has\r\n              been sent correctly.\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          sort(this.props.orderStatus).map((item) => (\r\n            <div key={item.id} className=\"orderedItem\">\r\n              <div className=\"orderedName\">\r\n                <h3>{item.name}</h3>\r\n                <p> Price: ${item.price}</p>\r\n              </div>\r\n              <div className=\"orderedCanter\">\r\n                <Counter\r\n                  summary\r\n                  item={item}\r\n                  addToOrder={this.props.addToOrder}\r\n                  removeFromOrder={this.props.removeFromOrder}\r\n                />\r\n              </div>\r\n              <div className=\"orderedPriceTotal\">\r\n                <p>\r\n                  Price for {item.quantity}{\" \"}\r\n                  {item.quantity === 1 ? \"item\" : \"items\"}:{\" \"}\r\n                  <strong> ${item.priceMultiQuantity}</strong>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        {this.props.orderStatus.length ? (\r\n          <div className=\"SummaryOrder\">\r\n            <div className=\"buttonPOST\">\r\n              <Button sendOrderButton sendOrder={this.sendOrder}>\r\n                send your order\r\n              </Button>\r\n            </div>\r\n            <div className=\"totalPrices\">\r\n              <p>\r\n                Total cost of the order:{\" \"}\r\n                <strong>${this.props.totalPrices}</strong>{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orderStatus: state.orderStatus,\r\n    tableNumber: state.tableNumber,\r\n    totalPrices: state.totalPrices,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToOrder: (item) => {\r\n      dispatch({ type: \"ADD\", payload: item });\r\n    },\r\n    removeFromOrder: (item) => {\r\n      dispatch({ type: \"REMOVE\", payload: item });\r\n    },\r\n    addPrices: (item) => {\r\n      dispatch({ type: \"ADD_PRICES\", payload: item });\r\n    },\r\n    clearOrder: () => {\r\n      dispatch({ type: \"DELETE\" });\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Summary);\r\n","import React from \"react\";\r\nimport \"../styles/summaryView.scss\";\r\nimport Summary from \"../components/Summary\";\r\nimport HeaderMenuItems from \"../components/HeaderMenuItems\";\r\n\r\nfunction SummaryView() {\r\n  return (\r\n    <>\r\n      <HeaderMenuItems />\r\n      <Summary />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SummaryView;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../styles/input.scss\";\r\n\r\nconst Input = (props) => {\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"what is your table number\"\r\n        value={props.tableNumber}\r\n        onChange={(e) => {\r\n          props.handleTableNumber(e);\r\n          props.handleFalseTableNumber();\r\n        }}\r\n        //onChange={props.handleTableNumber}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tableNumber: state.tableNumber,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    handleTableNumber: (e) => {\r\n      dispatch({ type: \"CHANGE_TABLE_NUMBER\", payload: e.target.value });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);\r\n\r\n/*class Input extends Component {\r\n  state = {\r\n    tableNumber: \"\"\r\n  };\r\n\r\n  handleTableNumber = e => {\r\n    this.setState({\r\n      tableNumber: e.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"what is your table number\"\r\n          value={this.state.tableNumber}\r\n          onChange={this.handleTableNumber}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default Input;*/\r\n","import React from \"react\";\r\nimport \"../styles/invitationView.scss\";\r\nimport img from \"../img/chickenburger.png\";\r\nimport Button from \"../components/Button\";\r\nimport Input from \"../components/Input\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass InvitationView extends React.Component {\r\n  state = {\r\n    statusTableNumber: false,\r\n  };\r\n\r\n  handleTrueTableNumber = () => {\r\n    if (!this.props.tableNumber) {\r\n      this.setState({\r\n        statusTableNumber: true,\r\n      });\r\n    }\r\n  };\r\n  handleFalseTableNumber = () => {\r\n    if (this.props.tableNumber) {\r\n      this.setState({\r\n        statusTableNumber: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"InvitationViewWrapper\">\r\n        <div className=\"logo\">\r\n          <img src={img} alt={img} />\r\n        </div>\r\n        <div className=\"enterYourTableNumber\">\r\n          {this.state.statusTableNumber ? <p>enter your table number</p> : null}\r\n        </div>\r\n        <Input handleFalseTableNumber={this.handleFalseTableNumber} />\r\n        <Button\r\n          checkNumberButton\r\n          handleTrueTableNumber={this.handleTrueTableNumber}\r\n          path={\"/menu\"}\r\n        >\r\n          see our menu\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tableNumber: state.tableNumber,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(InvitationView);\r\n","const orderStatusWithoutItem = (orderStatus, item) =>\r\n  orderStatus.filter((orderStatusItem) => orderStatusItem.id !== item.id);\r\n\r\nconst itemInOrderStatus = (orderStatus, item) =>\r\n  orderStatus.filter((orderStatusItem) => orderStatusItem.id === item.id)[0];\r\n\r\nconst addToOrderStatus = (orderStatus, item) => {\r\n  const orderItem = itemInOrderStatus(orderStatus, item);\r\n  return orderItem === undefined\r\n    ? [\r\n        ...orderStatusWithoutItem(orderStatus, item),\r\n        { ...item, quantity: 1, priceMultiQuantity: item.price },\r\n      ]\r\n    : [\r\n        ...orderStatusWithoutItem(orderStatus, item),\r\n        {\r\n          ...orderItem,\r\n          quantity: orderItem.quantity + 1,\r\n          priceMultiQuantity: parseFloat(\r\n            (orderItem.price * (orderItem.quantity + 1)).toFixed(2)\r\n          ),\r\n        },\r\n      ];\r\n};\r\n\r\nconst removeFromOrder = (orderStatus, item) => {\r\n  return item.quantity === 1\r\n    ? [...orderStatusWithoutItem(orderStatus, item)]\r\n    : [\r\n        ...orderStatusWithoutItem(orderStatus, item),\r\n        {\r\n          ...item,\r\n          quantity: item.quantity - 1,\r\n          priceMultiQuantity: parseFloat(\r\n            (item.price * (item.quantity - 1)).toFixed(2)\r\n          ),\r\n        },\r\n      ];\r\n};\r\n\r\nconst orderStatusReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n      return addToOrderStatus(state, action.payload);\r\n\r\n    case \"REMOVE\":\r\n      return removeFromOrder(state, action.payload);\r\n    case \"DELETE\":\r\n      return (state = []);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { orderStatusReducer };\r\n//\r\n//\r\n//\r\n\r\nconst tableNumberReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_TABLE_NUMBER\":\r\n      return (state = action.payload);\r\n    case \"DELETE\":\r\n      return (state = \"\");\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { tableNumberReducer };\r\n\r\nconst totalPricesReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_PRICES\":\r\n      return action.payload.length\r\n        ? (state = action.payload\r\n            .map((item) => item.priceMultiQuantity)\r\n            .reduce((ecc, item) => ecc + item)).toFixed(2)\r\n        : null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport { totalPricesReducer };\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { orderStatusReducer } from \"./reducer\";\r\nimport { tableNumberReducer } from \"./reducer\";\r\nimport { totalPricesReducer } from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  orderStatus: orderStatusReducer,\r\n  tableNumber: tableNumberReducer,\r\n  totalPrices: totalPricesReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport MenuView from \"./MenuView\";\nimport SummaryView from \"./SummaryView\";\nimport InvitationView from \"./InvitationView\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"../styles/root.scss\";\nimport \"../styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"../config/store\";\n\nclass Root extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <div className=\"wrapper\">\n            <Switch>\n              <Route path=\"/\" exact component={InvitationView} />\n              <Route path=\"/menu\" component={MenuView} />\n              <Route path=\"/summary\" component={SummaryView} />\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./styles/index.scss\";//\nimport Root from \"./views/Root\";\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n"],"sourceRoot":""}